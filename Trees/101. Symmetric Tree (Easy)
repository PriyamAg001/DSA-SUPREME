Code:
class Solution {
    bool check(TreeNode* root1 , TreeNode* root2){
        if (!root1 && !root2){
            return true;
        }
        // if one is null, other is not null
        if (!root1 || !root2){
            return false;
        }
        // check if the values of the two nodes are equal
        if (root1->val != root2->val){
            return false;
        }
        bool left = check(root1->left, root2->right);
        bool right = check(root1->right, root2->left);
        // if we get true from both the sides,
        // return true 
        if (left && right){
            return true;
        }
        // else return false;
        else{
            return false;
        }
    }
public:
    bool isSymmetric(TreeNode* root) {
        // if both the trees are NULL, return true
        if(!root){
            return  true;
        }
        return check(root->left , root->right);
    }
};
