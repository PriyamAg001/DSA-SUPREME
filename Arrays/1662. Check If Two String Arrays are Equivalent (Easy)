Code:
class Solution {
public:
    bool arrayStringsAreEqual(vector<string>& word1, vector<string>& word2) {
        string ans1;
        int n = word1.size();
        for(int i=0; i<n; i++){
            ans1 += word1[i];
        }

        string ans2;
        int m = word2.size();
        for(int j=0; j<m; j++){
            ans2 += word2[j];
        }

        return ans1 == ans2;
    }
};

Time complexity: O(n + m), where n is the total length of all strings in word1 and **mis the total length of all strings in word2.
Space complexity: O(n + m). This is because we creating new strings ans1 and ans2 that store all characters in word1 and word2.
