Code:
class Solution {
public:
    int shipWithinDays(vector<int>& weights, int days) {
        int left = 0;
        int right = 0;
        int n = weights.size();
        
        for (int i=0; i<n; i++) {
            left = max(left, weights[i]);
            right += weights[i];
        }

        while (left < right) {
            int mid = (left + right) / 2;
            int dayNum = 1;
            int cur = 0;

            for (int i=0; i<n; i++) {
                if (cur + weights[i] > mid) {
                    dayNum++;
                    cur = 0;
                }
                cur += weights[i];
            }

            if (dayNum > days){
                left = mid + 1;
            }
            else{
                right = mid;
            }
        }
        return left;
    }
};

Complexity:
Time complexity: O(n log m), where n is the size of the weights vector and m is the sum of all weights
Space complexity: O(1)
